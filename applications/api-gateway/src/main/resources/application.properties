```properties
# Degree Attestation API Gateway Configuration
server.port=8080
server.servlet.context-path=/api
server.compression.enabled=true
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
server.http2.enabled=true
server.error.include-message=always
server.error.include-binding-errors=always

spring.application.name=degree-attestation-gateway

# Profile configuration
spring.profiles.active=${SPRING_PROFILES_ACTIVE:development}

# Database configuration
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5432/degree_attestation}
spring.datasource.username=${DATABASE_USERNAME:dev}
spring.datasource.password=${DATABASE_PASSWORD:development}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000

# JPA configuration
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=false
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true

# File upload configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
spring.servlet.multipart.enabled=true
spring.servlet.multipart.location=${TEMP_DIR:/tmp}
spring.servlet.multipart.file-size-threshold=2KB

# Jackson configuration
spring.jackson.default-property-inclusion=non_null
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.serialization.indent-output=true
spring.jackson.deserialization.fail-on-unknown-properties=false
spring.jackson.time-zone=UTC

# Cache configuration
spring.cache.type=${CACHE_TYPE:simple}
spring.cache.cache-names=certificates,verifications,universities,analytics
spring.cache.caffeine.spec=maximumSize=1000,expireAfterWrite=1h

# Redis configuration (if using Redis cache)
spring.data.redis.host=${REDIS_HOST:localhost}
spring.data.redis.port=${REDIS_PORT:6379}
spring.data.redis.password=${REDIS_PASSWORD:}
spring.data.redis.database=${REDIS_DATABASE:0}
spring.data.redis.timeout=2000ms

# Security configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${JWT_ISSUER_URI:http://localhost:8080/auth/realms/degree-attestation}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${JWT_JWK_SET_URI:http://localhost:8080/auth/realms/degree-attestation/protocol/openid-connect/certs}

# VeryPhy API Integration
veryphy.api.base-url=${VERYPHY_API_URL:http://localhost:8000}
veryphy.api.api-key=${VERYPHY_API_KEY:}
veryphy.api.timeout=PT30S
veryphy.api.connection-timeout=PT10S
veryphy.api.read-timeout=PT30S
veryphy.api.max-retries=3
veryphy.api.retry-delay=PT2S
veryphy.api.max-file-size=10485760
veryphy.api.allowed-file-types=jpg,jpeg,png,gif,pdf
veryphy.api.circuit-breaker-enabled=true
veryphy.api.circuit-breaker-failure-threshold=5
veryphy.api.circuit-breaker-timeout=PT1M

# Degree Attestation Integration Settings
degree.attestation.integration.enable-veryphy-integration=${ENABLE_VERYPHY:true}
degree.attestation.integration.enable-async-processing=${ENABLE_ASYNC:true}
degree.attestation.integration.max-concurrent-processing=${MAX_CONCURRENT:10}
degree.attestation.integration.processing-timeout=PT5M
degree.attestation.integration.temp-file-directory=${TEMP_DIR:/tmp/degree-attestation}
degree.attestation.integration.cleanup-temp-files=true
degree.attestation.integration.temp-file-retention-duration=PT1H
degree.attestation.integration.enable-metrics=true
degree.attestation.integration.enable-detailed-logging=${ENABLE_DETAILED_LOGGING:false}
degree.attestation.integration.enable-caching=true
degree.attestation.integration.cache-expiration-duration=PT24H
degree.attestation.integration.enable-rate-limiting=true
degree.attestation.integration.rate-limit-requests-per-minute=${RATE_LIMIT:100}

# File Processing Configuration
file.processing.max-file-size=10485760
file.processing.allowed-mime-types=image/jpeg,image/jpg,image/png,image/gif,application/pdf
file.processing.allowed-extensions=jpg,jpeg,png,gif,pdf
file.processing.virus-scan-enabled=${VIRUS_SCAN:false}
file.processing.image-optimization-enabled=${IMAGE_OPTIMIZATION:true}
file.processing.max-image-width=2048
file.processing.max-image-height=2048
file.processing.jpeg-quality=0.85
file.processing.enable-thumbnail-generation=true
file.processing.thumbnail-size=200

# Security Configuration
security.api.enable-api-key-validation=${ENABLE_API_KEY_VALIDATION:true}
security.api.enable-jwt-validation=${ENABLE_JWT_VALIDATION:true}
security.api.enable-role-based-access=${ENABLE_RBAC:true}
security.api.enable-ip-whitelisting=${ENABLE_IP_WHITELIST:false}
security.api.whitelisted-ips=${WHITELISTED_IPS:127.0.0.1,::1}
security.api.enable-request-signing=${ENABLE_REQUEST_SIGNING:false}
security.api.signature-algorithm=HmacSHA256
security.api.enable-audit-logging=${ENABLE_AUDIT_LOGGING:true}
security.api.max-requests-per-ip=${MAX_REQUESTS_PER_IP:1000}
security.api.rate-limit-window-duration=PT1H
security.api.cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:8080}
security.api.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
security.api.cors.allowed-headers=*
security.api.cors.allow-credentials=true
security.api.cors.max-age=3600

# Blockchain Configuration
blockchain.fabric.network-config-path=${FABRIC_NETWORK_CONFIG:/fabric-network/connection-profile.yaml}
blockchain.fabric.wallet-path=${FABRIC_WALLET_PATH:/fabric-network/wallets}
blockchain.fabric.msp-id=${FABRIC_MSP_ID:AttestationMSP}
blockchain.fabric.user-name=${FABRIC_USER:admin}
blockchain.fabric.channel-name=${FABRIC_CHANNEL:degree-channel}
blockchain.fabric.chaincode-name=${FABRIC_CHAINCODE:degree-attestation}
blockchain.fabric.connection-timeout=PT30S
blockchain.fabric.request-timeout=PT60S

# Monitoring and Health Checks
management.endpoints.web.exposure.include=health,metrics,info,prometheus,env
management.endpoints.web.base-path=/actuator
management.endpoint.health.show-details=always
management.endpoint.health.show-components=always
management.endpoint.metrics.enabled=true
management.metrics.export.prometheus.enabled=true
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.distribution.percentiles.http.server.requests=0.5,0.9,0.95,0.99
management.metrics.tags.application=${spring.application.name}
management.metrics.tags.environment=${spring.profiles.active}

monitoring.enable-health-checks=true
monitoring.health-check-interval=PT1M
monitoring.enable-metrics-collection=true
monitoring.metrics-retention-duration=P30D
monitoring.enable-alerting=${ENABLE_ALERTING:false}
monitoring.alerting-thresholds.error-rate-threshold=0.05
monitoring.alerting-thresholds.response-time-threshold=PT10S
monitoring.alerting-thresholds.disk-space-threshold=0.90
monitoring.alerting-thresholds.memory-usage-threshold=0.85
monitoring.alerting-thresholds.cpu-usage-threshold=0.80
monitoring.enable-performance-tracking=true
monitoring.slow-request-threshold=PT5S

# Database Cache Configuration
database.cache.enable-redis-cache=${ENABLE_REDIS_CACHE:false}
database.cache.redis-host=${REDIS_HOST:localhost}
database.cache.redis-port=${REDIS_PORT:6379}
database.cache.redis-password=${REDIS_PASSWORD:}
database.cache.redis-database=0
database.cache.cache-default-ttl=PT1H
database.cache.cache-max-size=1000
database.cache.enable-local-cache=true
database.cache.local-cache-max-size=100

# Notification Configuration
notifications.enable-email-notifications=${ENABLE_EMAIL_NOTIFICATIONS:false}
notifications.enable-slack-notifications=${ENABLE_SLACK_NOTIFICATIONS:false}
notifications.enable-webhook-notifications=${ENABLE_WEBHOOK_NOTIFICATIONS:false}
notifications.email-templates-path=classpath:email-templates/
notifications.webhook-url=${WEBHOOK_URL:}
notifications.slack-webhook-url=${SLACK_WEBHOOK_URL:}
notifications.notify-on-verification-failure=true
notifications.notify-on-system-errors=true
notifications.notify-on-high-load=true

# Logging Configuration
logging.level.org.degreechain=${LOG_LEVEL:INFO}
logging.level.org.springframework.security=WARN
logging.level.org.hibernate.SQL=${SQL_LOG_LEVEL:WARN}
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN
logging.level.com.zaxxer.hikari=WARN
logging.level.org.springframework.web=${WEB_LOG_LEVEL:INFO}
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%logger{36}] - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%logger{36}] - %msg%n
logging.file.name=${LOG_FILE:/var/log/degree-attestation/gateway.log}
logging.file.max-size=100MB
logging.file.max-history=30
logging.file.total-size-cap=1GB

# Custom Application Properties
app.version=@project.version@
app.name=Degree Attestation Gateway
app.description=API Gateway for blockchain-based degree verification with VeryPhy integration
app.contact.name=Development Team
app.contact.email=dev@degree-attestation.com
app.contact.url=https://degree-attestation.com
app.license.name=MIT License
app.license.url=https://opensource.org/licenses/MIT

# Feature flags
app.features.enable-batch-processing=${ENABLE_BATCH_PROCESSING:true}
app.features.enable-real-time-notifications=${ENABLE_REAL_TIME_NOTIFICATIONS:true}
app.features.enable-advanced-analytics=${ENABLE_ADVANCED_ANALYTICS:true}
app.features.enable-audit-trail=${ENABLE_AUDIT_TRAIL:true}
app.features.enable-data-encryption=${ENABLE_DATA_ENCRYPTION:true}
app.features.max-batch-size=${MAX_BATCH_SIZE:50}
app.features.enable-university-self-registration=${ENABLE_UNIVERSITY_SELF_REGISTRATION:false}

# Async Processing Configuration
async.core-pool-size=5
async.max-pool-size=20
async.queue-capacity=100
async.thread-name-prefix=async-task-
async.keep-alive-seconds=60
async.wait-for-tasks-to-complete-on-shutdown=true
async.await-termination-seconds=30

# API Documentation
springdoc.api-docs.enabled=true
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operations-sorter=method
springdoc.swagger-ui.tags-sorter=alpha
springdoc.swagger-ui.doc-expansion=none
springdoc.swagger-ui.disable-swagger-default-url=true
springdoc.show-actuator=true
springdoc.group-configs[0].group=degrees
springdoc.group-configs[0].display-name=Degree Management
springdoc.group-configs[0].paths-to-match=/v1/degrees/**
springdoc.group-configs[1].group=verification
springdoc.group-configs[1].display-name=Certificate Verification
springdoc.group-configs[1].paths-to-match=/v1/verification/**
springdoc.group-configs[2].group=admin
springdoc.group-configs[2].display-name=Administration
springdoc.group-configs[2].paths-to-match=/v1/admin/**

# Development Profile

# spring.config.activate.on-profile=development
# spring.datasource.url=jdbc:h2:mem:testdb
# spring.datasource.driver-class-name=org.h2.Driver
# spring.datasource.username=sa
# spring.datasource.password=
# spring.h2.console.enabled=true
# spring.h2.console.path=/h2-console
# spring.jpa.hibernate.ddl-auto=create-drop
# spring.jpa.show-sql=true
# logging.level.org.degreechain=DEBUG
# logging.level.org.springframework.web=DEBUG
# logging.level.org.hibernate.SQL=DEBUG
# veryphy.api.base-url=http://localhost:8000

# Production Profile

# spring.config.activate.on-profile=production
# spring.datasource.hikari.maximum-pool-size=50
# spring.datasource.hikari.minimum-idle=10
# spring.datasource.hikari.connection-timeout=30000
# spring.datasource.hikari.idle-timeout=600000
# spring.datasource.hikari.max-lifetime=1800000
# logging.level.org.degreechain=INFO
# logging.level.org.springframework.web=WARN
# logging.level.org.hibernate.SQL=WARN
# logging.file.name=/var/log/degree-attestation/gateway.log
# management.endpoints.web.exposure.include=health,metrics,prometheus
# security.api.enable-ip-whitelisting=true
# security.api.enable-request-signing=true
# security.api.enable-audit-logging=true

# Testing Profile

# spring.config.activate.on-profile=test
# spring.datasource.url=jdbc:h2:mem:testdb
# spring.datasource.driver-class-name=org.h2.Driver
# spring.jpa.hibernate.ddl-auto=create-drop
# veryphy.api.base-url=http://mock-veryphy:8000
# degree.attestation.integration.enable-veryphy-integration=false
# logging.level.org.degreechain=DEBUG
# logging.level.org.springframework.test=DEBUG
